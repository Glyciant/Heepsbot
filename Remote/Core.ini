; Script Name: Core.ini
; Type: Required
; Credits - JSON Parser: http://hawkee.com/snippet/10194/
; It is recommended that you do not modify this script.

alias master {
  if ($1) {
    set %master $1
    echo <System> Bot Master Set To: $capital(%master)
  }
  else {
    echo <System> Current Bot Master: $capital(%master)
  }
}

alias user {
  if ($readini(Usernames.ini, $chan, $1) != $null) {
    return $readini(Usernames.ini, $chan, $1)
  }
  elseif ($readini(Usernames.ini, Global, $1) != $null) {
    return $readini(Usernames.ini, Global, $1)
  }
  else {
    return $upper($left($1,1)) $+ $mid($1,2-)
  }
}

alias capital return $upper($left($1,1)) $+ $mid($1,2-)

on *:text:!test:#: {
  if ($access($nick) <= $testlevel) {
    message $chan Test Reply Sent to $nick in $chan at $date $+ , $time $+ . 
  }
}

alias testlevel {
  return $iif($CommandLevel(!test) != $null, $CommandLevel(!test), 800)
}

on *:text:!level !test &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 300-900) {
      writeini -n CommandLevels.ini $chan !test $3
      message $chan $user($nick) -> The command userlevel for !test has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

alias BotSetting {
  return $readini(BotSettings.ini, $iif($2,$2,$chan), $1)
}

alias CommandLevel {
  return $readini(CommandLevels.ini, $chan, $1)
}

on *:text:!preset*:#: {
  if ($access($nick) <= 350) {
    if ($2) {
      if ($readini(Presets.ini,$+($2,.,Settings),Name) != $null) {
        set %preseti 2
        set %1 $ini(Presets.ini,$+($2,.,Settings),%preseti)
        set %2 $readini(Presets.ini,$chan,$ini(Presets.ini,$+($2,.,Settings),%preseti))
        remini BotSettings.ini $chan
        while (%preseti <= $ini(Presets.ini,$+($2,.,Settings),0)) {
          writeini BotSettings.ini $chan $ini(Presets.ini,$+($2,.,Settings),%preseti) $readini(Presets.ini,$+($2,.,Settings),$ini(Presets.ini,$+($2,.,Settings),%preseti))
          inc %preseti
        }
        set %preseti 1
        remini CommandLevels.ini $chan
        while (%preseti <= $ini(Presets.ini,$+($2,.,Levels),0)) {
          writeini CommandLevels.ini $chan $ini(Presets.ini,$+($2,.,Levels),%preseti) $readini(Presets.ini,$+($2,.,Settings),$ini(Presets.ini,$+($2,.,Levels),%preseti))
          inc %preseti
        }
        unset %preseti
        message $chan $user($nick) -> The settings preset has been updated. The bot will now restart.
        reconnect $chan 
      }
      else {
        message $chan $user($nick) -> The preset you have chosen does not exist or is not loaded.
      }
    }
    else {
      message $chan $user($nick) -> You must include a preset to use.
    }
  }
}

on *:text:!shoutout:#: {
  if ($access($nick) <= $shoutoutlevel) {
    if ($BotSetting(Shoutout) != $null) {
      message $chan Shoutout to $BotSetting(Shoutout) $+ ! Check out their channel at twitch.tv/ $+ $BotSetting(Shoutout)
    }
    else {
      message $chan $user($nick) -> A channel to create a shoutout for must be chosen before you use this command.
    }
  }
}

on *:text:!set shoutout &:#: {
  if ($access($nick) <= 400) {
    writeini -n BotSettings.ini $chan Shoutout $3
    message $chan $user($nick) -> The shoutout user and link have been updated.
  }
}

alias shoutoutlevel {
  return $iif($CommandLevel(!shoutout) != $null, $CommandLevel(!shoutout), 800)
}

on *:text:!level !shoutout &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 1-900) {
      writeini -n CommandLevels.ini $chan !shoutout $3
      message $chan $user($nick) -> The command userlevel for !shoutout has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!highlight *:#: {
  if ($access($nick) <= $highlightlevel) {
    set $+(%,highlight.,$chan) $2-
    set %target $iif($2,$2,$mid(#,2-))
    set %channel $chan
    highlight
    message $chan $user($nick) -> Highlight notice created.
  }
}

;Uptime sockets from http://forums.mirc.com/ubbthreads.php/ubb/showflat/Number/247767/Searchpage/1/Main/46779/Words/%21uptime/Search/true/Re:_Little_socket_script_-_pro#Post247767

alias highlight {
  sockclose highlight
  sockopen highlight nightdev.com 80
}

on *:sockopen:highlight:{
  if ($sockerr) { sockclose $sockname | halt }
  sockwrite -n $sockname GET /hosted/uptime.php?channel= $+ %target HTTP/1.1
  sockwrite -n $sockname Host: www.nightdev.com 
  sockwrite -n $sockname $crlf
}

on *:sockread:highlight:{
  if ($sockerr) { sockclose $sockname | halt }
  var %data
  sockread %data
  tokenize 32 %data
  if ($1 isnum) && ($2) { writeini -n Highlights.ini %channel $1- $($+(%,highlight.,%channel),2)
  unset $+(%,highlight.,%channel) }
  elseif (%data == The channel is not live.) { writeini -n Highlights.ini %channel Offline $($+(%,highlight.,%channel),2)
  unset $+(%,highlight.,%channel) }
}

on *:sockclose:highlight:{ 
  unset %channel
  unset %target
}

alias highlightlevel {
  return $iif$CommandLevel(!highlight) != $null, $CommandLevel(!highlight), 350)
}

on *:text:!level !highlight &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 1-900) {
      writeini -n CommandLevels.ini $chan !highlight $3
      message $chan $user($nick) -> The command userlevel for !highlight has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!random*:#: {
  if ($access($nick) <= $randomlevel) {
    if ($0 <= 2) {
      message $chan $user($nick) -> You must choose at least 2 things to randomize.
      return
    }
    set %j $0
    set %i 2
    while (%i <= %j) {
      write $+(random-,$chan,.txt) $($+($,%i),2)
      inc %i
    }
    message $chan $user($nick) -> I choose $read($+(random-,$chan,.txt), n)
    remove $+(random-,$chan,.txt)
    unset %i
    unset %j
  }
}

alias randomlevel {
  return $iif($CommandLevel(!random) != $null, $CommandLevel(!random), 800)
}

on *:text:!level !random &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 1-900) {
      writeini -n CommandLevels.ini $chan !random $3
      message $chan $user($nick) -> The command userlevel for !random has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!lurk:#: {
  if ($access($nick) <= $lurklevel) {
    if ($BotSetting(Lurk) = $null) {
      message $chan $iif($BotSetting(LurkOn) != $null,$replace($BotSetting(LurkOff),^USER^,$user($nick),^NICK^,$capital($nick),^CHAN,$owner),$user($nick) is now lurking.)
    }
  }
}

on *:text:!unlurk:#: {
  if ($access($nick) <= $lurklevel) {
    if ($BotSetting(Lurk) = $null) {
      message $chan $iif($BotSetting(LurkOff) != $null,$replace($BotSetting(LurkOff),^USER^,$user($nick),^NICK^,$capital($nick),^CHAN,$owner),$user($nick) is no longer lurking.)
    }
  }
}

alias lurklevel {
  return $iif($CommandLevel(!lurk) != $null, $CommandLevel(!lurk), 800)
}

on *:text:!level !lurk &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 1-900) {
      writeini -n CommandLevels.ini $chan !lurk $3
      message $chan $user($nick) -> The command userlevel for !lurk has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!set lurk &:#: {
  if ($access($nick) <= 400) {
    if ($3 = on) {
      remini BotSettings.ini $chan Lurk 
      message $chan $user($nick) -> The lurk command was enabled.
    }
    if ($3 = off) {
      writeini -n BotSettings.ini $chan Lurk .
      message $chan $user($nick) -> The lurk command was disabled.
    }
    if ($3 = onmessage) {
      writeini -n BotSettings.ini $chan LurkOn
      message $chan $user($nick) -> The !lurk message has been updated.
    }
    if ($3 = offmessage) {
      writeini -n BotSettings.ini $chan LurkOff
      message $chan $user($nick) -> The !lurkoff message has been updated.
    }
  }
}

on *:text:!chatters:#: {
  if ($access($nick) <= $chatterslevel) {
    message $chan There are currently $chatters chatters.
  }
}

alias chatters {
  set %c 0
  while (%c < $nick(#,0,a)) {
    inc %c
  }
  return %c
}

alias chatterslevel {
  return $iif($CommandLevel(!chatters) != $null, $CommandLevel(!chatters), 800)
}

on *:text:!level !chatters &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 300-900) {
      writeini -n CommandLevels.ini $chan !chatters $3
      message $chan $user($nick) -> The command userlevel for !chatters has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!moderators:#: {
  if ($access($nick) <= $moderatorslevel) {
    set %t 1
    while (%t <= $nick(#,0,o)) {
      set %tmod $iif(%tmod,%tmod $capital($nick(#,%t,o)) $+ %comma ,$capital($nick(#,%t,o)) $+ %comma)
      inc %t
    }
    set %tmod $left(%tmod,$calc($len(%tmod) - 1)) $+ .
    message # Moderators Online: $iif(%tmod,%tmod,None)
    unset %tmod
  }
}

alias moderatorslevel {
  return $iif($CommandLevel(!moderators) != $null,$CommandLevel(!moderators), 800)
}

on *:text:!level !moderators &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 300-900) {
      writeini -n CommandLevels.ini $chan !moderators $3
      message $chan $user($nick) -> The command userlevel for !moderators has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!botinfo:#: {
  if ($access($nick) <= $botlevel) {
    message $chan Hello! I'm $capital($me) $+ , an open-source chat bot made by Heep123. Thanks for choosing me to moderate this channel! <3
  }
}

alias botlevel {
  return $iif($CommandLevel(!bot) != $null, $CommandLevel(!bot), 800)
}

on *:text:!level !bot &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 300-900) {
      writeini -n CommandLevels.ini $chan !bot $3
      message $chan $user($nick) -> The command userlevel for !bot has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:text:!say*:#: {
  if ($access($nick) <= $saylevel) {
    message $chan $2-
  }
}

alias saylevel {
  return $iif($CommandLevel(!say) != $null, $CommandLevel(!say), 600)
}

on *:text:!level !say &:#: {
  if ($access($nick) <= 400) {
    if ($3 isnum 300-900) {
      writeini -n CommandLevels.ini $chan !say $3
      message $chan $user($nick) -> The command userlevel for !say has been updated.
    }
    else {
      message $chan $user($nick) -> You must enter a valid userlevel.
    }
  }
}

on *:join:#: {
  if ($nick = $me) {
    if (!$exists(Presets.ini)) {
      write -c Presets.ini
    }
    set %comma $chr(44)
    set %hash $chr(35)
    $+(timerantilockout.,$chan 0 65) remini AntiGlobal.ini AntiGlobal $chan
    if ($chan != #heepsbot) {
      message $chan Hello! I'm $capital($me) $+ , an open-source chat bot made by Heep123. Thanks for choosing me to moderate this channel! <3
    }
    elseif ($chan = #heepsbot) {
      message $chan Hello! I'm $capital($me) $+ . $iif(%master,My bot master is $capital(%master),I currently do not have a defined bot master.)
    }
  }
}

on *:text:*:#: {
  if ($1 = ! $+ $me) {
    if (!$2) {
      if ($access($nick) <= 500) {
        message $chan $user($nick) -> Insufficient Parameters! Usage: ! $+ $me <remove // reconnect // moderate // commands // antiglobal // server // twitter // wiki>  

      }
    }
    elseif ($2 = remove) {
      if ($access($nick) <= 350) {
        message $chan $user($nick) -> Leaving Channel
        part $chan
      }
    }
    elseif ($2 = reconnect) {
      if ($access($nick) <= 400) {
        message $chan $user($nick) -> Reconnecting...
        Reconnect $chan
      }
    }
    elseif ($2 = moderate) {
      if ($access($nick) <= $heepsbotlevel) {
        if ($me isop #) {
          message $chan $user($nick) -> I am a moderator of this channel.
        }
        else {
          message $chan $user($nick) -> I am not a moderator of this channel.
        }
      }
    }
    elseif ($2 = commands) {
      if ($access($nick) <= $heepsbotlevel) {
        message $chan You can view Heepsbot commands here: http://goo.gl/gudEpe
      }
    }
    elseif ($2 = antiglobal) {
      if ($access($nick) <= $heepsbotlevel) {
        if ($me !isop #) {
          message $chan $user($nick) -> I can talk $calc(14 - $readini(AntiGlobal.ini, AntiGlobal, $chan)) more times this minute.
        }
        else {
          message $chan $user($nick) -> I can talk $calc(94 - $readini(AntiGlobal.ini, AntiGlobal, $chan)) more times this minute.
        }
      }
    }
    elseif ($2 = server) {
      if ($access($nick) <= 250) {
        message $chan $user($nick) -> Reconnecting...
        server
      }
    }
    elseif ($2 = twitter) {
      if ($access($nick) <= $heepsbotlevel) {
        message $chan Follow @Heepsbot on Twitter for updates!
      }
    }
    elseif ($2 = wiki) {
      if ($access($nick) <= $heepsbotlevel) {     
        message $chan View the Heepsbot Reddit Wiki here: https://goo.gl/TzNAes
      }
    }
  }
  inc %totalmessages
  inc %daymessages
}

alias heepsbotlevel {
  return $iif($CommandLevel(!heepsbot) != $null, $CommandLevel(!heepsbot), 800)
}

on *:text:!level *:#: {
  if ($2 = !heepsbot) || ($2 = ! $+ $me) {
    if ($access($nick) <= 400) {
      if ($3 isnum 300-900) {
        writeini -n CommandLevels.ini $chan !heepsbot $3
        message $chan $user($nick) -> The command userlevel for ! $+ $me has been updated.
      }
      else {
        message $chan $user($nick) -> You must enter a valid userlevel.
      }
    }
  }
}

alias message {
  if ($me isop $1) { 
    if ($readini(AntiGlobal.ini, AntiGlobal, $1) >= 95) { return }
  }
  else {
    if ($readini(AntiGlobal.ini, AntiGlobal, $1) >= 15) { return }
  }
  msg $1 $2-
  writeini -n AntiGlobal.ini AntiGlobal $1 $calc($readini(AntiGlobal.ini, AntiGlobal, $1) + 1)
}
alias owner {
  return $mid($chan,2)
}
alias Reconnect {
  part $1
  $+(timerreconnect.,$chan 1 1) join $1
}
on *:connect: {
  if ($server = tmi.twitch.tv) {
    timerdaymessages off
    timerdaymessages -o 0 86400 unset %daymessages
    /raw CAP REQ :twitch.tv/membership
    /raw CAP REQ :twitch.tv/commands
    /join #heepsbot
  }
}

; JSON Reader required from https://github.com/SReject/JSON-For-Mirc/releases/tag/v0.2.41-beta
